pipeline {
    agent any
    
    parameters {
        string(name: 'BUILD_TARGET', defaultValue: 'aosp_arm-trunk_staging-eng', description: 'The target to build with lunch')
    }
    
    environment {
        // Set the default AWS region for AWS CLI commands
        AWS_DEFAULT_REGION = 'us-west-2'
    }

    stages {
        stage('Start EC2 Instance') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding', 
                    credentialsId: 'jenkins-aws-key'
                ]]) {
                    sh '''
                    set -x
                    aws ec2 start-instances --instance-ids i-06386b350ad842edb
                    aws ec2 wait instance-running --instance-ids i-06386b350ad842edb
                    '''
                }
            }
        }
        
        stage('Prepare Environment') {
            agent { label 'LargeAgent2' }
            steps {
                dir ('/home/ubuntu/AndroidSource') {
                    sh 'bash -c "ccache -M 50G"'
                }
            }
        }
        
        stage('Build') {
            agent { label 'LargeAgent2' }
            steps {
                dir ('/home/ubuntu/AndroidSource') {
                    // "ccache -M 50G" Set the ccache limit to 50GB
                    // "m -j\\$(nproc)" Make and use all available cores
                    sh "bash -c 'source build/envsetup.sh && lunch \${BUILD_TARGET} && m -j\$(nproc)'"
                }
            }
        }
        
        stage('Archive') {
            agent { label 'LargeAgent2' }
            steps {
                archiveArtifacts artifacts: '/home/ubuntu/AndroidSource/out/target/product/**/*', fingerprint: true
            }
        }
    }
    
    post {
        always {
            echo 'Cleaning up workspace'
            cleanWs()
            echo 'Stopping AWS EC2 instance.'
            withCredentials([[
                $class: 'AmazonWebServicesCredentialsBinding', 
                credentialsId: 'jenkins-aws-key'
            ]]) {
                sh '''
                set -x
                aws ec2 stop-instances --instance-ids i-06386b350ad842edb
                aws ec2 wait instance-stopped --instance-ids i-06386b350ad842edb
                '''
            }
        }
        success {
            echo 'Build succeeded.'
        }
        failure {
            echo 'Build failed.'
        }
    }
}
